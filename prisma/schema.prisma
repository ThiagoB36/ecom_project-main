// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

  model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String?   @unique
  emailVerified   Boolean @default(false)
  image           String?
  password        String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  favoriteIds     String[] @db.ObjectId
  
  activateTokens ActivateToken[]
  activateResetTokens ActivateResetToken[]

  role UserRole @default(USER)

  accounts Account[]   

  bulletPoints BulletPoints[]   // teste
  products Product[]            // teste
}

enum UserRole {
  ADMIN
  USER
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model ActivateToken {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  token       String    @unique
  createdAt   DateTime  @default(now())
  activatedAt DateTime?
  expireAt    DateTime?

  user   User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

}

model ActivateResetToken {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  token       String    @unique
  createdAt   DateTime  @default(now())
  activatedAt DateTime?
  expireAt    DateTime?

  user   User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

}

//---------------------

model Product {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  title         String    // teste
  description   String    // teste
  bulletPoints  BulletPoints[]  
  thumbnail     String    // teste
  images        String    // teste
  category      String    // teste
  mrp           Int       // teste
  quantity      Int       // teste
  salePrice     Int       // teste

  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model BulletPoints{
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  content       String

  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  product Product @relation(fields: [productId], references: [id])
  productId String @db.ObjectId

}


//title: string;
//description: string;
//bulletPoints?: string[];
//thumbnail: {url: string, id:string};
//images?: {url: string, id:string}[]; 
//price:{
 // base: number;
  //discount: number;
//}
//sale: number;
//quantity: number
//category: string;

//---------------------


////////////////////////////////////////////////////////////////

// model Product {
//   id           String       @id @default(auto()) @map("_id") @db.ObjectId
//   title        String
//   description  String
//   bulletPoints BulletPoint[]
//   thumbnails   Thumbnail[]  // Renamed to plural for better representation of multiple thumbnails
//   prices       Price[]      // Renamed to plural for better representation of multiple prices
//   sale         Float
//   quantity     Int
//   category     String
//   user         User?        @relation(fields: [userId], references: [id])
//   userId       String?      @db.ObjectId
// }

// model Thumbnail {
//   id        String    @id @default(auto()) @map("_id") @db.ObjectId
//   url       String
//   productId String    @db.ObjectId
//   product   Product   @relation(fields: [productId], references: [id])
// }

// model BulletPoint {
//   id        String    @id @default(auto()) @map("_id") @db.ObjectId
//   content   String
//   productId String    @db.ObjectId
//   product   Product   @relation(fields: [productId], references: [id])
// }

// model Price {
//   id        String    @id @default(auto()) @map("_id") @db.ObjectId
//   base      Float
//   discount  Float
//   productId String    @db.ObjectId
//   product   Product   @relation(fields: [productId], references: [id])
// }

//title: string;
//description: string;
//bulletPoints?: string[];
//thumbnail: {url: string, id:string};
//images?: {url: string, id:string}[]; 
//price:{
 // base: number;
  //discount: number;
//}
//sale: number;
//quantity: number
//category: string;

