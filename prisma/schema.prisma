// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

  model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String?   @unique
  emailVerified   Boolean @default(false)
  image           String?
  password        String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  favoriteIds     String[] @db.ObjectId
  
  activateTokens ActivateToken[]
  activateResetTokens ActivateResetToken[]

  role UserRole @default(USER)

  accounts Account[]   
}

enum UserRole {
  ADMIN
  USER
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model ActivateToken {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  token       String    @unique
  createdAt   DateTime  @default(now())
  activatedAt DateTime?
  expireAt    DateTime?

  user   User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

}

model ActivateResetToken {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  token       String    @unique
  createdAt   DateTime  @default(now())
  activatedAt DateTime?
  expireAt    DateTime?

  user   User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

}

// model Products {

// }